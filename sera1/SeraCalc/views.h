/*%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%
%%%  File:        views.h
%%%
%%%  Purpose:     Structure definitions, and prototypes for views.c.
%%%               Allow the user to view the view.* files produced
%%%               by seraMC. Once these files have been generated by
%%%               seraMC a window will popup with the three images.
%%%               If the user would like to adjust the source distance etc,
%%%               they can kill seraMC from this window and adjust their
%%%               values appropriately.
%%%
%%%  Notes:
%%%
%%%  Written By:  Mark Rossmeier
%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%*/

#ifndef VIEWS_H
#define VIEWS_H

/*%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%  INCLUDES
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%*/

#include "rtt_include.h"

/*%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%  DEFINES
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%*/

#define NUM_VIEWS    3
#define VIEW_WIDTH   256
#define VIEW_HEIGHT  256
#define VIEW_TIMEOUT 3000 /* three seconds */

/* Color stuff */
#define MAX_COLORS          256
#define NUM_GRAYS           128
#define NUM_RESERVED_COLORS 6
#define MAX_RESERVED_COLOR  (MAX_COLORS - 1)
#define MIN_RESERVED_COLOR  (MAX_RESERVED_COLOR - NUM_RESERVED_COLORS + 1)
#define MAX_GRAY            (MIN_RESERVED_COLOR - 1)
#define MIN_GRAY            (MAX_GRAY - NUM_GRAYS + 1)

#define RESERVED_RED       (250)
#define RESERVED_GREEN     (251)
#define RESERVED_BLUE      (252)
#define RESERVED_CYAN      (253)
#define RESERVED_MAGENTA   (254) 
#define RESERVED_YELLOW    (255)



/*%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%  STRUCTURE DEFINITIONS
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%*/

typedef struct _color_info_t
{
    Colormap cmap;
    XColor mycmap[256];
    unsigned char cmap_values[256*3];
    unsigned long cmap_pixels[256];
    int maxHWcolormaps;
    int depth;
    int colortype;
    int background;
    int saturation;
    int offset;
    int gamma;
    
} color_info_t;


typedef struct _viewImage_t
{
    
    Widget frame;
    Widget form;
    Widget drawingArea;
    Widget nameLabel;

    char filename[256];
    unsigned char * imageData;
    XImage * ximage;

} viewImage_t;


typedef struct _viewGui_t
{
    XtIntervalId viewIntervalId;

    Widget shell;
    Widget form;
    Widget rowcol;

    Widget viewToggle;
    int displayViewWindow;

    Display * display;
    Visual  * visual;
    int screen;
    XVisualInfo visinfo;

    GC gc;

    unsigned char gray_colormapping[256];

    viewImage_t views[NUM_VIEWS];
    color_info_t color_info;
    
} viewGui_t;


/*%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%  PROTOTYPES
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%*/

void createViewWindow       ( Widget parent );
void lookForViewFiles       ( XtPointer clientData, XtIntervalId * id );
void initViewGraphicsContext( void );
void destroyViewXImages     ( void );
void viewToggleCallback     ( Widget w, XtPointer clientData, XtPointer callData );

/*
 * Prototypes for color_support.c
 */
void myXStoreColor  ( viewGui_t * gui, Colormap cmap, XColor * color );
void myXStoreColors ( viewGui_t * gui, Colormap cmap, XColor * color, int num );
void myXQueryColor  ( viewGui_t * gui, Colormap cmap, XColor * color );
void myXQueryColors ( viewGui_t * gui, Colormap cmap, XColor * color, int num );

void init_colors( viewGui_t * gui );
void use_new_color_depth( viewGui_t * gui, unsigned char * in_data, unsigned int memsize );
int get_num_bytes( viewGui_t * gui );

void myPutImage( viewGui_t *gui, Window wi, GC gc, XImage * ximage_src,
                 int src_x, int src_y,
                 int dst_x, int dst_y,
                 int width, int height );

void add_guaranteed_colors( viewGui_t  * gui );
void load_gamma_colormap( viewGui_t * gui, unsigned char * passed_cmap, float gamma_bnct );
void colormap_load_rgb( viewGui_t * gui );

void Install_ColormapEH( Widget w, XtPointer clientdata,
                         XEvent *event, Boolean *flag );
void register_colormap_ehs_for_widget( viewGui_t * gui, Widget w, Colormap cmap );

void print_supported_visuals(Display * display);
void init_color(viewGui_t *gui, int r, int g, int b, XColor *color);

#endif
