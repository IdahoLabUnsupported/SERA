XCOMM platform:  $XConsortium: sun.cf,v 1.133 94/07/08 12:23:12 gildea Exp $
XCOMM platform:  $SunSoft: @(#)sun.cf	1.1 01/13/97 16:16:27 $

#ifdef HasGcc
#define HasSunC NO
#define HasGcc2 YES
#endif

#define CCompilerMajorVersion 4

#ifdef SVR4
#ifdef i386Architecture
#ifndef OSName
#define OSName            SunOS 5.6 x86
#endif
XCOMM operating system:  OSName
#ifndef OSMajorVersion
#define OSMajorVersion    5
#endif
#ifndef OSMinorVersion
#define OSMinorVersion    6
#endif
#ifndef OSTeenyVersion
#define OSTeenyVersion    0
#endif
#else
#ifndef OSName
#define OSName            SunOS 5.6
#endif
XCOMM operating system:  OSName
#ifndef OSMajorVersion
#define OSMajorVersion    5
#endif
#ifndef OSMinorVersion
#define OSMinorVersion    6
#endif
#ifndef OSTeenyVersion
#define OSTeenyVersion    0
#endif
#endif
#else
#ifndef OSName
#define OSName            SunOS 4.1.3
#endif
XCOMM operating system:  OSName
#ifndef OSMajorVersion
#define OSMajorVersion    4
#endif
#ifndef OSMinorVersion
#define OSMinorVersion    1
#endif
#ifndef OSTeenyVersion
#define OSTeenyVersion    3
#endif
#endif
 
/* The DDK Major and Minor Versions. These correspond to the Version number
 * of the Graphics Porting Interface presented to IHVs.
*/
#define ServerDDKMajorVersion DDXMajorVersion
#define ServerDDKMinorVersion DDXMinorVersion

/*
 * Compiler setup.  This sun.cf file knows what options to use with 
 * certain compilers, including Sun C, CenterLine C, and gcc.  It 
 * also understands how to set some of the options for various C++
 * compilers, including Sun C++ and CenterLine C++.
 *
 * === C Compiler Setup ==========================================
 *
 * For SunPro C, define HasSunC to YES in site.def.  
 * For CenterLine C, define HasCenterLineC to YES in site.def
 * For gcc or gcc2, define HasGcc or HasGcc2 to YES in site.def
 * For other compilers, define HasSunC to NO in site.def, then 
 *    provide appropriate values for the various compiler related
 *    configuration varibles used here.
 * 
 * If you say you have the SunPro C compiler, we assume you have 
 * version 2.0.x of the compiler.  If you have version 3.0.x instead, 
 * define CCompilerMajorVersion as 3 in site.def
 *
 * If you don't tell us which C compiler you have, we assume you have 
 * the SunPro C compiler under Solaris 2.x, and the bundled /bin/cc 
 * under SunOS 4.1.x
 *
 * === C++ Compiler Setup ==========================================
 *
 * For SunPro C++, define HasSunCplusplus to YES in site.def
 * For CenterLine C++, define HasCenterLineCplusplus to YES in site.def
 * For other compilers, define HasCplusplus to YES in site.def, and 
 *    check to see if you need to provide values for CplusplusOptions
 *    and/or DefaultCplusplusOptions.
 *
 * In any case, you may also need to set CplusplusDependIncludes.
 *
 * If you say you have the SunPro C++ compiler, we assume you have 
 * version 3.0.x of the compiler.  If you have version 4.0.x instead, 
 * define CplusplusCompilerMajorVersion as 4 in site.def.
 *
 */


#ifndef HasSunC
#if (HasCenterLineC || HasGcc || HasGcc2 || OSMajorVersion < 5)
#define HasSunC NO
#else
#define HasSunC YES
#endif
#endif

#if HasSunC 
#ifndef CCompilerMajorVersion
#ifdef i386Architecture
#define CCompilerMajorVersion 2
#else
#define CCompilerMajorVersion 4
#endif
#endif
#endif

#if HasSunCplusplus
#ifndef HasCplusplus
#define HasCplusplus YES
#endif
#ifndef CplusplusCompilerMajorVersion
#define CplusplusCompilerMajorVersion 4
#endif
#endif

#if HasCenterLineC
#ifndef CcCmd
#define CcCmd clcc
#endif
#endif

#if HasCenterLineCplusplus
#ifndef HasCplusplus
#define HasCplusplus YES
#endif
#ifndef DefaultCplusplusOptions
#define DefaultCplusplusOptions -Xa
#endif
#ifndef CplusplusOptions
#define CplusplusOptions -Xa
#endif
#endif

#define InstallCmd              /usr/ucb/install

#if OSMajorVersion < 4 || (OSMajorVersion == 4 && OSMinorVersion < 1)
/* We do not guarantee this will work */
#define BootstrapCFlags   -DNOSTDHDRS
#define StandardDefines   -DNOSTDHDRS
#define XawI18nDefines     -DUSE_X_WCHAR_STRING -DUSE_XMBTOWC
#endif

#if OSMajorVersion == 4 
#if OSMinorVersion == 1
#define HasPoll           NO
#endif
#if OSMinorVersion > 1 || (OSMinorVersion == 1 && OSTeenyVersion > 1)
/* You ALSO need this if you have Sun ld patch 100170-06 or later to 4.1.1 */
#define SunPost411FCSLd	  YES
#endif
#endif

#define BuildWithMapfiles     YES
#define MapfileName   mapfile


XCOMM SUNSOFT SUNSOFT_LOADABLE
#define ServerExtraDefines -DSUNSOFT -DSUNSOFT_BUYBACK -DPIXPRIV DPSDefines -DNEED_LINEHELPER AllocateLocalDefines
#define ServerOSDefines   -DDDXOSINIT

#if OSMajorVersion > 4
#define BootstrapCFlags	  -DSVR4
#ifndef XawI18nDefines
#define XawI18nDefines    -DHAS_WCTYPE_H -DHAS_ISW_FUNCS
#endif
#ifdef i386Architecture
#define StandardDefines	  -Dsun -Di386 -DSVR4 -DSYSV
#define ToolkitStringsABIOptions      -intelabi
#endif
#ifdef ppcArchitecture
/* If CCompiler Version 2.0.x is used with Solaris 2.4, sys/isa_defs.h
 * blows up unless you define -Dsparc. The 2.0.x C Compiler doesn't define it.
*/
#define StandardDefines	  -Dsun -Dppc -DSVR4 -DSYSV
#define ToolkitStringsABIOptions      -ppcabi
#else
#ifdef SparcArchitecture 
#define StandardDefines	  -Dsun -Dsparc -DSVR4 -DSYSV
#define ToolkitStringsABIOptions      -sparcabi
#endif /* CCompilerMajorVersion == 2 */
#endif
/* #define ExtraLibraries    -lsocket -lnsl */
#if OSMinorVersion > 1
#define ThreadedX	  YES
#if HasSunC && CCompilerMajorVersion > 2
#define ThreadsCompileFlags -mt
#else
#define SystemMTDefines -D_REENTRANT
#define ThreadsLibraries -lthread
#endif
#if HasSunCplusplus && CplusplusCompilerMajorVersion > 3
#define ThreadsCplusplusCompileFlags -mt
#else
#define CplusplusSystemMTDefines -D_REENTRANT
#define ThreadsCplusplusLibraries -lthread
#endif
#endif 		/* OSMinorVersion > 1 */
#define HasVFork          NO
#define InstKmemFlags	  -g sys -m 2755
#define ShLibIncludeFile <sunLib.tmpl>
/*
 * Set flags for position independent code before including sv4Lib.rules
 * if the compiler in use doesn't use standard SVR4 flags
 */
#if HasSunC || HasCenterLineC
#define PositionIndependentCFlags -Kpic
#endif
#if HasSunCplusplus || HasCenterLineCplusplus
#define PositionIndependentCplusplusFlags -pic
#endif
#include <svr4.cf>
#else
#define InstKmemFlags	  -g kmem -m 2755
#include <sunLib.rules>
#endif

#define HasNdbm		  YES
#define HasShm		  YES
#define HasSecureRPC	  YES
#define SetTtyGroup	  YES
#define HasPutenv	  YES
/* #ifndef i386Architecture */
#ifndef Xsun24Server
#define Xsun24Server	  NO		/* color, mono, multiple depths */
#endif
#ifndef XsunServer
#define XsunServer	  YES		/* color and mono, 8 bit only */
#endif
#ifndef XsunMonoServer
#define XsunMonoServer	  NO		/* monochrome only */
#endif
/* #endif  not i386Architecture */
#ifndef BuildPexExt
#define BuildPexExt	  (XsunServer || Xsun24Server)
#endif
#ifndef BuildXKB
#define	BuildXKB	  YES
#endif

#if HasGcc
#if HasGcc2
#define OptimizedCDebugFlags -O2
#else
#define SharedLibraryCcCmd cc
#define ExtraLoadFlags -B/usr/bin/
#define AllocateLocalDefines /**/

.c.o:
	$(CC) -c $(CFLAGS) $*.c

#endif /* HasGcc2 (else) */
#else

#define AllocateLocalDefines -DINCLUDE_ALLOCA_H

/* Set up compiler-dependent options for Sun C */

#if HasSunC
#ifdef Sun3Architecture
#ifndef DefaultCCOptions
#define DefaultCCOptions -f68881 -pipe
#endif
#else	/* not defined(Sun3Architecture) */
#if OSMajorVersion < 5
#ifndef DefaultCCOptions
#define DefaultCCOptions -pipe
#endif
#else	/* OSMajorVersion >= 5*/
#ifndef DefaultCCOptions
#if defined(SparcArchitecture)
#define DefaultCCOptions -Xc -xF -xcg92
#else
#define DefaultCCOptions -Xc -xF
#endif
#endif
#endif	
#endif	
#endif

/* Set compiler-dependent options for CenterLine C */

#if HasCenterLineC
#ifndef	DefaultCCOptions
#define DefaultCCOptions -Xt -w1 -DANSICPP -U__HIGHC__
#endif
#ifndef NeedConstPrototypes
#define NeedConstPrototypes YES
#endif
#ifndef NeedNestedPrototypes
#define NeedNestedPrototypes YES
#endif
#ifndef NeedVarargsPrototypes
#define NeedVarargsPrototypes YES
#endif
#endif


#define PexCCOptions DefaultCCOptions

#endif

#if OSMajorVersion < 5
#define SharedAllocateLocalDefines -DINCLUDE_ALLOCA_H
#define LibraryCCOptions /* don't want special floating point */
#endif

#if OSMajorVersion == 5 && OSMinorVersion > 3
#ifdef NeedFuntionPrototypes
#undef NeedFuntionPrototypes
#endif
#define NeedFunctionPrototypes NO
#endif

#ifndef ManKeywordsTarget
#define ManKeywordsTarget(manpath)                                    @@\
man_keywords::                                                        @@\
       catman -M $(DESTDIR)manpath -w
#endif

#define BuildDPSExt       YES
#define BuildDPSLib       YES

#define BuildXInputExt	YES


XCOMM The following section is for parameters included in the BNCT project.
XCOMM Note: -lX11 MUST be the last library listed.

#define StandardIncludes -I/usr/openwin/share/include -I/usr/openwin/share/include/X11 -I/usr/dt/share/include -I$(TOP)/Shared/include

#define ExtraLibraries -L/usr/openwin/lib -L/usr/dt/lib -lgen -lnsl -lsocket 

XCOMM Location for libraries built withing the project.
SERA_LIB_LOCATION   = $(TOP)/Shared/lib

XCOMM For the cc compiler any library not in the default library search path
XCOMM must be preceded with -L<path> and then the -l<libname>. Defining 
XCOMM ExtraLoadOptions will accomplish this.

#define ExtraLoadOptions -L$(SERA_LIB_LOCATION)

XCOMM Dependencies for the project libraries
D_COMMON = $(SERA_LIB_LOCATION)/libcommon.a
D_QSH    = $(SERA_LIB_LOCATION)/libqsh.a
D_UV     = $(SERA_LIB_LOCATION)/libuv.a
D_SZ     = $(SERA_LIB_LOCATION)/libsz.a
D_NURB   = $(SERA_LIB_LOCATION)/libnurb.a
D_DCM    = $(SERA_LIB_LOCATION)/libdcm.a

DEFAULT_X_LIBS      = -lXm
EXTRA_X_LIBS        = -lXmu -lXt -lSM -lICE -lXext -lXi -lX11

DEFAULT_DEP_X_LIBS  = $(DEPXTOOLLIB) $(DEPXLIB)
EXTRA_DEP_X_LIBS    = $(DEPXMULIB) $(DEPXILIB)

GL_LIBS             = -lGLw -lGLU -lGL 

LIBUV_FLAGS         = -DONE_UNDERSCORE
